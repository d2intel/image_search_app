/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-08-03")
public class SPSearchResult implements org.apache.thrift.TBase<SPSearchResult, SPSearchResult._Fields>, java.io.Serializable, Cloneable, Comparable<SPSearchResult> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SPSearchResult");

  private static final org.apache.thrift.protocol.TField RET_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("ret_status", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField RET_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("ret_info", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField RET_PROD_FIELD_DESC = new org.apache.thrift.protocol.TField("ret_prod", org.apache.thrift.protocol.TType.STRUCT, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SPSearchResultStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SPSearchResultTupleSchemeFactory();

  /**
   * 
   * @see SPReturnStatus
   */
  public SPReturnStatus ret_status; // required
  public SPReturnInfo ret_info; // required
  public SPReturnProduct ret_prod; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see SPReturnStatus
     */
    RET_STATUS((short)1, "ret_status"),
    RET_INFO((short)2, "ret_info"),
    RET_PROD((short)3, "ret_prod");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RET_STATUS
          return RET_STATUS;
        case 2: // RET_INFO
          return RET_INFO;
        case 3: // RET_PROD
          return RET_PROD;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RET_STATUS, new org.apache.thrift.meta_data.FieldMetaData("ret_status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SPReturnStatus.class)));
    tmpMap.put(_Fields.RET_INFO, new org.apache.thrift.meta_data.FieldMetaData("ret_info", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SPReturnInfo.class)));
    tmpMap.put(_Fields.RET_PROD, new org.apache.thrift.meta_data.FieldMetaData("ret_prod", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SPReturnProduct.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SPSearchResult.class, metaDataMap);
  }

  public SPSearchResult() {
  }

  public SPSearchResult(
    SPReturnStatus ret_status,
    SPReturnInfo ret_info,
    SPReturnProduct ret_prod)
  {
    this();
    this.ret_status = ret_status;
    this.ret_info = ret_info;
    this.ret_prod = ret_prod;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SPSearchResult(SPSearchResult other) {
    if (other.isSetRet_status()) {
      this.ret_status = other.ret_status;
    }
    if (other.isSetRet_info()) {
      this.ret_info = new SPReturnInfo(other.ret_info);
    }
    if (other.isSetRet_prod()) {
      this.ret_prod = new SPReturnProduct(other.ret_prod);
    }
  }

  public SPSearchResult deepCopy() {
    return new SPSearchResult(this);
  }

  @Override
  public void clear() {
    this.ret_status = null;
    this.ret_info = null;
    this.ret_prod = null;
  }

  /**
   * 
   * @see SPReturnStatus
   */
  public SPReturnStatus getRet_status() {
    return this.ret_status;
  }

  /**
   * 
   * @see SPReturnStatus
   */
  public SPSearchResult setRet_status(SPReturnStatus ret_status) {
    this.ret_status = ret_status;
    return this;
  }

  public void unsetRet_status() {
    this.ret_status = null;
  }

  /** Returns true if field ret_status is set (has been assigned a value) and false otherwise */
  public boolean isSetRet_status() {
    return this.ret_status != null;
  }

  public void setRet_statusIsSet(boolean value) {
    if (!value) {
      this.ret_status = null;
    }
  }

  public SPReturnInfo getRet_info() {
    return this.ret_info;
  }

  public SPSearchResult setRet_info(SPReturnInfo ret_info) {
    this.ret_info = ret_info;
    return this;
  }

  public void unsetRet_info() {
    this.ret_info = null;
  }

  /** Returns true if field ret_info is set (has been assigned a value) and false otherwise */
  public boolean isSetRet_info() {
    return this.ret_info != null;
  }

  public void setRet_infoIsSet(boolean value) {
    if (!value) {
      this.ret_info = null;
    }
  }

  public SPReturnProduct getRet_prod() {
    return this.ret_prod;
  }

  public SPSearchResult setRet_prod(SPReturnProduct ret_prod) {
    this.ret_prod = ret_prod;
    return this;
  }

  public void unsetRet_prod() {
    this.ret_prod = null;
  }

  /** Returns true if field ret_prod is set (has been assigned a value) and false otherwise */
  public boolean isSetRet_prod() {
    return this.ret_prod != null;
  }

  public void setRet_prodIsSet(boolean value) {
    if (!value) {
      this.ret_prod = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case RET_STATUS:
      if (value == null) {
        unsetRet_status();
      } else {
        setRet_status((SPReturnStatus)value);
      }
      break;

    case RET_INFO:
      if (value == null) {
        unsetRet_info();
      } else {
        setRet_info((SPReturnInfo)value);
      }
      break;

    case RET_PROD:
      if (value == null) {
        unsetRet_prod();
      } else {
        setRet_prod((SPReturnProduct)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RET_STATUS:
      return getRet_status();

    case RET_INFO:
      return getRet_info();

    case RET_PROD:
      return getRet_prod();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RET_STATUS:
      return isSetRet_status();
    case RET_INFO:
      return isSetRet_info();
    case RET_PROD:
      return isSetRet_prod();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SPSearchResult)
      return this.equals((SPSearchResult)that);
    return false;
  }

  public boolean equals(SPSearchResult that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_ret_status = true && this.isSetRet_status();
    boolean that_present_ret_status = true && that.isSetRet_status();
    if (this_present_ret_status || that_present_ret_status) {
      if (!(this_present_ret_status && that_present_ret_status))
        return false;
      if (!this.ret_status.equals(that.ret_status))
        return false;
    }

    boolean this_present_ret_info = true && this.isSetRet_info();
    boolean that_present_ret_info = true && that.isSetRet_info();
    if (this_present_ret_info || that_present_ret_info) {
      if (!(this_present_ret_info && that_present_ret_info))
        return false;
      if (!this.ret_info.equals(that.ret_info))
        return false;
    }

    boolean this_present_ret_prod = true && this.isSetRet_prod();
    boolean that_present_ret_prod = true && that.isSetRet_prod();
    if (this_present_ret_prod || that_present_ret_prod) {
      if (!(this_present_ret_prod && that_present_ret_prod))
        return false;
      if (!this.ret_prod.equals(that.ret_prod))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetRet_status()) ? 131071 : 524287);
    if (isSetRet_status())
      hashCode = hashCode * 8191 + ret_status.getValue();

    hashCode = hashCode * 8191 + ((isSetRet_info()) ? 131071 : 524287);
    if (isSetRet_info())
      hashCode = hashCode * 8191 + ret_info.hashCode();

    hashCode = hashCode * 8191 + ((isSetRet_prod()) ? 131071 : 524287);
    if (isSetRet_prod())
      hashCode = hashCode * 8191 + ret_prod.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SPSearchResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetRet_status()).compareTo(other.isSetRet_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRet_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ret_status, other.ret_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRet_info()).compareTo(other.isSetRet_info());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRet_info()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ret_info, other.ret_info);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRet_prod()).compareTo(other.isSetRet_prod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRet_prod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ret_prod, other.ret_prod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SPSearchResult(");
    boolean first = true;

    sb.append("ret_status:");
    if (this.ret_status == null) {
      sb.append("null");
    } else {
      sb.append(this.ret_status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ret_info:");
    if (this.ret_info == null) {
      sb.append("null");
    } else {
      sb.append(this.ret_info);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ret_prod:");
    if (this.ret_prod == null) {
      sb.append("null");
    } else {
      sb.append(this.ret_prod);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (ret_status == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ret_status' was not present! Struct: " + toString());
    }
    if (ret_info == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ret_info' was not present! Struct: " + toString());
    }
    if (ret_prod == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ret_prod' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (ret_info != null) {
      ret_info.validate();
    }
    if (ret_prod != null) {
      ret_prod.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SPSearchResultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SPSearchResultStandardScheme getScheme() {
      return new SPSearchResultStandardScheme();
    }
  }

  private static class SPSearchResultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SPSearchResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SPSearchResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RET_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ret_status = SPReturnStatus.findByValue(iprot.readI32());
              struct.setRet_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // RET_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.ret_info = new SPReturnInfo();
              struct.ret_info.read(iprot);
              struct.setRet_infoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // RET_PROD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.ret_prod = new SPReturnProduct();
              struct.ret_prod.read(iprot);
              struct.setRet_prodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SPSearchResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.ret_status != null) {
        oprot.writeFieldBegin(RET_STATUS_FIELD_DESC);
        oprot.writeI32(struct.ret_status.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.ret_info != null) {
        oprot.writeFieldBegin(RET_INFO_FIELD_DESC);
        struct.ret_info.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.ret_prod != null) {
        oprot.writeFieldBegin(RET_PROD_FIELD_DESC);
        struct.ret_prod.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SPSearchResultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SPSearchResultTupleScheme getScheme() {
      return new SPSearchResultTupleScheme();
    }
  }

  private static class SPSearchResultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SPSearchResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SPSearchResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.ret_status.getValue());
      struct.ret_info.write(oprot);
      struct.ret_prod.write(oprot);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SPSearchResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.ret_status = SPReturnStatus.findByValue(iprot.readI32());
      struct.setRet_statusIsSet(true);
      struct.ret_info = new SPReturnInfo();
      struct.ret_info.read(iprot);
      struct.setRet_infoIsSet(true);
      struct.ret_prod = new SPReturnProduct();
      struct.ret_prod.read(iprot);
      struct.setRet_prodIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

