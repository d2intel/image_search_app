# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import rpc_searcher_plan_pb2 as rpc__searcher__plan__pb2


class SearchPlanServiceStub(object):
  """=======   Service  ===========
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.doImageSearch = channel.unary_unary(
        '/search_plan.SearchPlanService/doImageSearch',
        request_serializer=rpc__searcher__plan__pb2.SPRequest.SerializeToString,
        response_deserializer=rpc__searcher__plan__pb2.SPSearchResult.FromString,
        )


class SearchPlanServiceServicer(object):
  """=======   Service  ===========
  """

  def doImageSearch(self, request, context):
    """service function
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SearchPlanServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'doImageSearch': grpc.unary_unary_rpc_method_handler(
          servicer.doImageSearch,
          request_deserializer=rpc__searcher__plan__pb2.SPRequest.FromString,
          response_serializer=rpc__searcher__plan__pb2.SPSearchResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'search_plan.SearchPlanService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
